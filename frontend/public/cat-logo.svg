<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   width="1200pt"
   height="1200pt"
   version="1.1"
   viewBox="0 0 1200 1200"
   id="svg4"
   sodipodi:docname="noun-cat-1332052.svg"
   inkscape:version="1.3 (0e150ed6c4, 2023-07-21)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <defs
     id="defs4">
    <meshgradient
       inkscape:collect="always"
       id="meshgradient12"
       gradientUnits="userSpaceOnUse"
       x="205.55846"
       y="200.91884"
       gradientTransform="scale(0.75)">
      <meshrow
         id="meshrow12">
        <meshpatch
           id="meshpatch12">
          <stop
             path="c 402.72,0  805.439,0  1208.16,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop13" />
          <stop
             path="c 0,387.844  0,775.687  0,1163.53"
             style="stop-color:#ac9d93;stop-opacity:1"
             id="stop14" />
          <stop
             path="c -402.72,0  -805.439,0  -1208.16,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop15" />
          <stop
             path="c 0,-387.844  0,-775.687  0,-1163.53"
             style="stop-color:#ac9d93;stop-opacity:1"
             id="stop16" />
        </meshpatch>
      </meshrow>
    </meshgradient>
  </defs>
  <sodipodi:namedview
     id="namedview4"
     pagecolor="#ffffff"
     bordercolor="#000000"
     borderopacity="0.25"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#d1d1d1"
     inkscape:document-units="pt"
     inkscape:zoom="0.408125"
     inkscape:cx="811.02603"
     inkscape:cy="780.39816"
     inkscape:window-width="1536"
     inkscape:window-height="892"
     inkscape:window-x="0"
     inkscape:window-y="0"
     inkscape:window-maximized="1"
     inkscape:current-layer="svg4" />
  <g
     id="g4">
    <path
       d="m 1152,864 c -28.801,-30 -66,-49.199 -106.8,-60 6,-36 7.1992,-74.398 4.8008,-111.6 -4.8008,-52.801 -18,-108 -40.801,-160.8 74.398,-98.398 93.602,-231.6 93.602,-351.6 0,-12 -9.6016,-21.602 -21.602,-21.602 -112.8,0 -216,51.602 -297.6,127.2 -18,-7.1992 -36,-13.199 -55.199,-16.801 1.1992,0 1.1992,0 2.3984,-1.1992 18,-6 39.602,-7.1992 56.398,-16.801 8.3984,-4.8008 9.6016,-20.398 0,-25.199 -1.1992,-4.8008 -3.6016,-8.3984 -9.6016,-9.6016 -105.6,-24 -218.4,-20.398 -320.4,13.199 -39.602,-44.398 -90,-74.398 -146.4,-92.398 -38.398,-13.199 -133.2,-43.199 -171.6,-19.199 -37.199,22.801 -16.801,94.801 -10.801,129.6 9.6016,64.801 26.398,135.6 60,194.4 -69.602,120 -81.602,268.8 -16.801,392.4 -50.398,28.801 -94.801,69.602 -123.6,117.6 -8.3984,13.199 10.801,27.602 21.602,16.801 39.602,-40.801 79.199,-74.398 122.4,-100.8 3.6016,6 7.1992,10.801 10.801,16.801 13.199,18 27.602,33.602 43.199,49.199 -25.199,34.801 -45.602,70.801 -63.602,109.2 -7.1992,16.801 15.602,31.199 25.199,14.398 19.199,-36 40.801,-68.398 64.801,-99.602 124.8,102 301.2,127.2 460.8,103.2 84,-13.199 172.8,-42 235.2,-102 l 1.1992,-1.1992 c 2.3984,2.3984 6,4.8008 8.3984,6 45.602,37.199 82.801,81.602 120,127.2 9.6016,10.801 26.398,-3.6016 19.199,-14.398 -27.602,-49.199 -72,-102 -124.8,-145.2 20.398,-27.602 34.801,-58.801 44.398,-91.199 33.602,7.1992 67.199,20.398 100.8,45.602 10.812,4.8047 22.812,-11.992 14.414,-21.594 z m -148.8,-93.602 c -1.1992,8.3984 -2.3984,15.602 -3.6016,24 -56.398,-7.1992 -115.2,-1.1992 -165.6,12 -12,3.6016 -9.6016,20.398 2.3984,21.602 54,2.3984 104.4,-2.3984 152.4,1.1992 -8.3984,25.199 -21.602,48 -37.199,68.398 -40.801,-27.602 -85.199,-46.801 -127.2,-54 -12,-2.3984 -19.199,12 -8.3984,19.199 36,22.801 74.398,40.801 110.4,62.398 -112.8,106.8 -325.2,118.8 -468,79.199 -61.199,-16.801 -115.2,-45.602 -159.6,-84 25.199,-30 51.602,-58.801 79.199,-87.602 8.3984,-8.3984 -2.3984,-22.801 -13.199,-16.801 -34.801,21.602 -64.801,48 -92.398,79.199 -15.602,-16.801 -30,-33.602 -43.199,-52.801 31.199,-15.602 63.602,-30 100.8,-42 9.6016,-3.6016 8.3984,-20.398 -2.3984,-19.199 -39.602,2.3984 -79.199,13.199 -117.6,30 -51.602,-94.801 -60,-211.2 -4.8008,-325.2 3.6016,-6 6,-12 9.6016,-19.199 7.1992,-1.1992 14.398,-7.1992 10.801,-15.602 -13.199,-45.602 -33.602,-90 -45.602,-135.6 -8.3984,-31.199 -34.801,-112.8 -25.199,-150 40.801,30 81.602,60 118.8,96 39.602,37.199 68.398,80.398 103.2,121.2 8.3984,9.6016 21.602,-2.3984 16.801,-13.199 -39.602,-86.398 -121.2,-170.4 -205.2,-220.8 39.602,3.6016 106.8,30 123.6,37.199 48,20.398 88.801,50.398 123.6,90 14.398,15.602 32.398,4.8008 37.199,-10.801 76.801,-24 159.6,-32.398 241.2,-27.602 -15.602,6 -32.398,13.199 -42,25.199 -2.3984,2.3984 -3.6016,4.8008 -4.8008,7.1992 -2.3984,8.3984 1.1992,18 10.801,21.602 27.602,9.6016 54,19.199 79.199,31.199 3.6016,13.199 21.602,22.801 36,10.801 70.801,-61.199 142.8,-110.4 231.6,-128.4 -28.801,20.398 -55.199,45.602 -76.801,67.199 -38.398,38.398 -80.398,86.398 -99.602,138 -4.8008,13.199 14.398,24 24,14.398 36,-39.602 62.398,-87.602 100.8,-126 26.398,-27.602 58.801,-49.199 88.801,-73.199 -2.3984,110.4 -45.602,207.6 -92.398,309.6 -3.6016,7.1992 0,15.602 6,19.199 0,0 -1.1992,1.1992 -1.1992,1.1992 25.199,69.613 35.996,144.02 28.797,214.81 z"
       id="path1" />
    <path
       d="m 705.6,816 c -6,13.199 -8.3984,27.602 -19.199,38.398 -13.199,13.199 -33.602,18 -51.602,13.199 -25.199,-7.1992 -33.602,-26.398 -43.199,-44.398 18,-9.6016 36,-28.801 30,-46.801 -2.3984,-7.1992 -8.3984,-13.199 -16.801,-13.199 -16.801,-1.1992 -20.398,14.398 -32.398,21.602 -10.801,6 -19.199,-7.1992 -28.801,-10.801 -7.1992,-2.3984 -14.398,3.6016 -14.398,10.801 0,15.602 10.801,30 24,37.199 -9.6016,18 -18,34.801 -39.602,43.199 -25.199,9.6016 -73.199,1.1992 -73.199,-33.602 0,-13.199 -18,-14.398 -22.801,-3.6016 -20.398,54 32.398,91.199 82.801,79.199 25.199,-6 54,-25.199 69.602,-50.398 18,25.199 51.602,44.398 76.801,48 48,6 110.4,-38.398 86.398,-91.199 -7.2031,-7.1992 -22.805,-7.1992 -27.602,2.4023 z"
       id="path2" />
    <path
       d="m 357.6,610.8 c -7.1992,0 -15.602,2.3984 -20.398,8.3984 -16.801,16.801 -9.6016,46.801 10.801,56.398 21.602,10.801 49.199,-1.1992 54,-25.199 2.3984,-12 -1.1992,-24 -10.801,-33.602 -8.4023,-7.1953 -21.602,-10.797 -33.602,-5.9961 z"
       id="path3" />
    <path
       d="m 800.4,649.2 c -4.8008,0 -8.3984,1.1992 -12,4.8008 -10.801,-1.1992 -22.801,4.8008 -28.801,15.602 -8.3984,13.199 -6,30 2.3984,42 9.6016,12 24,15.602 39.602,13.199 30,-6 40.801,-44.398 19.199,-66 -4.7969,-6 -11.996,-9.6016 -20.398,-9.6016 z"
       id="path4" />
  </g>
  <path
     style="fill:url(#meshgradient12);fill-opacity:1;stroke:#ac9d93;stroke-width:1.83767"
     d="m 552.22052,1020.7615 c -43.5553,-4.7658 -87.01849,-14.088 -121.11497,-25.97733 -25.97989,-9.05917 -70.27777,-31.00837 -92.05502,-45.61237 -20.25755,-13.5849 -37.45056,-26.8266 -37.58533,-28.94745 -0.10403,-1.63718 31.89619,-38.27955 53.49151,-61.2513 22.44755,-23.87828 27.27912,-29.88645 27.27912,-33.92213 0,-5.06812 -6.46697,-10.96207 -12.02786,-10.96207 -9.50536,0 -50.427,30.96075 -79.3128,60.00697 l -18.75261,18.85673 -10.33637,-11.40735 c -13.82452,-15.25695 -31.05736,-37.86833 -29.81073,-39.1149 0.55162,-0.55163 12.46038,-6.22155 26.46392,-12.59985 21.91023,-9.97958 37.68026,-16.2657 68.64629,-27.36323 7.9467,-2.8479 11.84368,-9.87832 9.25284,-16.69275 -1.61261,-4.24147 -2.80897,-4.76377 -10.91206,-4.76377 -23.51494,0 -65.11577,9.28875 -97.03118,21.66525 l -18.69842,7.25115 -9.13834,-20.4306 c -11.92288,-26.65605 -17.12499,-41.71352 -22.93064,-66.37246 -6.52258,-27.70405 -8.58202,-46.59842 -8.58202,-78.73585 0,-54.70272 11.33222,-102.88402 37.04527,-157.50578 7.44257,-15.8101 10.11308,-19.76707 14.44373,-21.40171 3.1625,-1.19372 5.76447,-3.80432 6.42843,-6.44977 1.11321,-4.43539 -5.82429,-26.2606 -29.37571,-92.41531 -11.40973,-32.04932 -27.36092,-87.28897 -36.08438,-124.96171 -6.00252,-25.92224 -9.66634,-72.58806 -5.69901,-72.58806 2.35341,0 48.43098,34.48316 75.72252,56.66862 33.37205,27.12834 73.1726,68.83759 111.20803,116.54121 19.14359,24.00967 36.37115,44.15052 38.28349,44.75749 5.32622,1.69047 13.03722,-5.01787 13.72346,-11.93901 0.42452,-4.2815 -1.9981,-10.66612 -8.99588,-23.70805 -23.09792,-43.04811 -50.54595,-79.11104 -90.60692,-119.04498 -30.04427,-29.94901 -52.06503,-48.40092 -81.98282,-68.69605 -10.50436,-7.12577 -17.75318,-12.95595 -16.1085,-12.95595 5.69626,0 44.69414,10.83125 68.47608,19.01851 71.23268,24.52284 115.19081,51.10209 159.66302,96.54014 18.66138,19.06669 23.99715,21.39148 35.45252,15.44667 3.75267,-1.94747 8.10968,-6.15269 9.68224,-9.34493 3.20269,-6.50134 7.46149,-8.28286 37.77496,-15.80172 25.95477,-6.43775 54.91514,-11.6862 82.69526,-14.98675 26.32461,-3.12763 106.94131,-5.81558 112.33575,-3.74555 2.71391,1.04142 1.1697,2.38695 -7.60451,6.62604 -21.02068,10.15575 -31.67896,22.39321 -29.52118,33.89515 1.59023,8.47665 7.21066,12.75828 24.94308,19.00156 43.91982,15.46342 64.54854,24.98528 68.29322,31.52306 6.81712,11.90177 23.49135,14.21152 35.14462,4.86832 3.24705,-2.60334 16.65405,-13.4781 29.79338,-24.16613 44.78377,-36.42875 94.63387,-66.94833 138.00967,-84.49329 15.2934,-6.18599 54.01213,-18.04076 55.16323,-16.88968 0.2849,0.28496 -6.2551,5.86567 -14.5333,12.40156 -8.27838,6.5359 -29.6551,26.17776 -47.5039,43.64858 -49.96995,48.9118 -77.74643,83.92201 -97.14128,122.43961 -6.53437,12.977 -11.0235,24.25914 -11.0235,27.70418 0,8.01139 7.16483,14.53825 15.9594,14.53825 8.73645,0 13.84988,-5.65101 55.5399,-61.37826 40.42493,-54.0363 64.34333,-79.08949 107.86968,-112.98782 17.5407,-13.66068 32.4434,-24.8376 33.1172,-24.8376 1.9761,0 -0.9443,36.3789 -4.8347,60.22487 -9.6348,59.05646 -27.347,112.15991 -68.3326,204.8693 -20.26328,45.83556 -21.20573,49.22303 -15.62978,56.17775 2.69858,3.3659 11.29155,30.1301 17.80328,55.4509 15.0258,58.42828 18.9123,110.59239 12.5596,168.57427 l -2.06013,18.80408 -4.78612,-1.3068 c -9.51233,-2.59718 -81.18405,-1.25213 -104.02043,1.9521 -32.68125,4.58565 -59.85607,11.13877 -62.7816,15.13965 -3.5316,4.8297 -3.02505,11.27505 1.21958,15.51967 3.55117,3.55118 6.14317,3.6762 76.72282,3.70043 40.17608,0.0135 74.9313,0.5298 77.23373,1.14667 5.15047,1.37985 4.73452,3.04403 -6.29558,25.18785 -8.09775,16.25685 -21.01057,36.6984 -24.57307,38.9001 -1.0404,0.64305 -7.08338,-2.10982 -13.4289,-6.1173 -29.2296,-18.4602 -68.0325,-34.93597 -98.4855,-41.81707 -16.0245,-3.62085 -19.9797,-3.96458 -23.91563,-2.0781 -3.8847,1.86187 -4.71577,3.53887 -4.71577,9.51585 0,9.0963 -0.08,9.04035 60.79672,42.50835 25.18358,13.845 47.29988,26.20335 49.14735,27.4629 3.07073,2.09347 2.36093,3.12255 -8.2695,11.988 -54.46117,45.41902 -134.7942,75.4459 -228.04472,85.2386 -32.79211,3.4436 -101.31571,3.449 -132.74163,0.011 z M 509.14147,905.44447 c 6.62811,-2.2596 16.87882,-6.99322 22.77937,-10.51912 10.95394,-6.5457 29.28667,-22.99808 34.72931,-31.1673 l 3.02614,-4.54223 11.4865,11.25465 c 36.09913,35.37038 76.64887,44.43525 115.13289,25.7379 25.91878,-12.59257 42.44857,-35.12002 42.44857,-57.85072 0,-22.2 -4.68503,-29.9247 -18.263,-30.11213 -10.94137,-0.15097 -13.67287,2.51281 -21.20125,20.67563 -8.33259,20.10308 -14.34358,27.4554 -27.84807,34.06253 -19.62499,9.60165 -43.79802,5.44319 -58.94471,-10.14015 -7.87788,-8.10503 -19.65828,-27.81053 -17.64025,-29.50748 0.81272,-0.6834 4.92512,-3.88687 9.13866,-7.11885 11.34324,-8.70082 18.98527,-21.18653 18.98527,-31.01857 0,-9.11025 -3.85044,-17.87018 -9.08657,-20.67248 -5.45522,-2.91952 -17.05469,-2.22007 -22.15385,1.3359 -2.52681,1.76213 -8.01145,6.71835 -12.18809,11.0139 -9.31661,9.58185 -14.33603,9.9672 -25.92936,1.9908 -14.86305,-10.22603 -24.9722,-6.801 -24.66792,8.35762 0.21606,10.76393 5.56118,21.11033 15.1432,29.31218 l 7.61476,6.51795 -6.82598,11.2368 c -8.00698,13.18087 -17.32859,22.72275 -27.57235,28.22378 -6.11698,3.28492 -10.43494,3.9474 -25.7274,3.9474 -16.48131,0 -19.47627,-0.53993 -29.03705,-5.23463 -12.61624,-6.195 -19.32336,-15.08167 -21.18025,-28.06305 -0.99726,-6.97162 -2.30518,-9.42712 -6.17976,-11.60182 -12.53923,-7.03815 -22.35253,5.766 -22.37163,29.18992 -0.0126,15.46508 2.77195,23.74058 11.84127,35.1915 16.60283,20.9628 54.52693,29.71545 84.49155,19.50007 z M 812.42152,721.60471 c 11.78138,-6.21982 18.69878,-16.96128 19.6827,-30.56343 0.43635,-6.03273 0.31463,-12.87613 -0.27052,-15.20758 -1.94813,-7.76189 -12.25185,-21.21308 -18.53235,-24.19334 -6.6282,-3.14533 -20.40218,-3.98658 -22.03425,-1.34575 -0.54263,0.87795 -4.51943,2.15801 -8.8374,2.84458 -11.03625,1.7548 -19.10805,7.84685 -24.42128,18.43142 -9.80589,19.53475 -2.43629,42.2567 16.49446,50.85574 10.87859,4.94145 27.69254,4.57713 37.91864,-0.82164 z M 387.18991,673.89425 c 28.59998,-19.81983 16.463,-65.62473 -17.38869,-65.62473 -11.55829,0 -25.44485,3.50543 -30.90698,7.80195 -14.37126,11.30444 -15.41575,38.06367 -2.05309,52.59917 11.39999,12.40057 36.26922,14.98071 50.34876,5.22361 z"
     id="path5" />
  <script
     id="mesh_polyfill"
     type="text/javascript">&#10;!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();&#10;</script>
</svg>
